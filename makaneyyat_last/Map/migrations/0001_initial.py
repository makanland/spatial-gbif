# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2019-02-24 12:57
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='CLCLevel1',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CLCLevel2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CLCLevel3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CLCLevel4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CORINELandCover',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('level1', models.CharField(max_length=100)),
                ('level2', models.CharField(max_length=100)),
                ('level3', models.CharField(max_length=100)),
                ('level4', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('subject', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('creator', models.CharField(blank=True, max_length=500, null=True)),
                ('publisher', models.CharField(blank=True, max_length=500, null=True)),
                ('contributor', models.CharField(blank=True, max_length=500, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=500, null=True)),
                ('format', models.CharField(blank=True, max_length=100, null=True)),
                ('source', models.CharField(blank=True, max_length=500, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('coverage', models.CharField(blank=True, max_length=500, null=True)),
                ('rights', models.CharField(blank=True, max_length=500, null=True)),
                ('relation', models.CharField(blank=True, max_length=500, null=True)),
                ('ar_title', models.CharField(blank=True, max_length=100, null=True)),
                ('ar_subject', models.CharField(blank=True, max_length=100, null=True)),
                ('ar_description', models.CharField(blank=True, max_length=500, null=True)),
                ('ar_publisher', models.CharField(blank=True, max_length=500, null=True)),
                ('ar_creator', models.CharField(blank=True, max_length=500, null=True)),
                ('ar_contributor', models.CharField(blank=True, max_length=500, null=True)),
                ('ar_format', models.CharField(blank=True, max_length=100, null=True)),
                ('ar_relation', models.CharField(blank=True, max_length=500, null=True)),
                ('ar_type', models.CharField(blank=True, max_length=500, null=True)),
                ('ar_source', models.CharField(blank=True, max_length=500, null=True)),
                ('ar_rights', models.CharField(blank=True, max_length=500, null=True)),
                ('properties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Makaneyya',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=1000)),
                ('title', models.CharField(max_length=100)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('lastEdited', models.DateTimeField(auto_now=True)),
                ('approved', models.BooleanField(default=False)),
                ('lon', models.FloatField(blank=True, default=1.0, null=True, verbose_name='longitude')),
                ('lat', models.FloatField(blank=True, default=1.0, null=True, verbose_name='latitude')),
                ('gbifQuery', models.CharField(default='', max_length=500)),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='makaneyyatCreated', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='LineStringDataElement',
            fields=[
                ('dataelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Map.DataElement')),
                ('geometry', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
            ],
            bases=('Map.dataelement',),
        ),
        migrations.CreateModel(
            name='MultiLineStringDataElement',
            fields=[
                ('dataelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Map.DataElement')),
                ('geometry', django.contrib.gis.db.models.fields.MultiLineStringField(srid=4326)),
            ],
            bases=('Map.dataelement',),
        ),
        migrations.CreateModel(
            name='MultiPolygonDataElement',
            fields=[
                ('dataelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Map.DataElement')),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            bases=('Map.dataelement',),
        ),
        migrations.CreateModel(
            name='PointDataElement',
            fields=[
                ('dataelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Map.DataElement')),
                ('geometry', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            bases=('Map.dataelement',),
        ),
        migrations.CreateModel(
            name='PolygonDataElement',
            fields=[
                ('dataelement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Map.DataElement')),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
            ],
            bases=('Map.dataelement',),
        ),
        migrations.AddField(
            model_name='makaneyya',
            name='elements',
            field=models.ManyToManyField(blank=True, related_name='makaneyyat', to='Map.DataElement'),
        ),
        migrations.AddField(
            model_name='makaneyya',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='clc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Map.CORINELandCover'),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='clc_level1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Map.CLCLevel1'),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='clc_level2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Map.CLCLevel2'),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='clc_level3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Map.CLCLevel3'),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='clc_level4',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Map.CLCLevel4'),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='source_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Map.Source'),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='subject_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Map.Subject'),
        ),
        migrations.AddField(
            model_name='dataelement',
            name='year',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Map.Year'),
        ),
        migrations.AddField(
            model_name='makaneyya',
            name='line_elements',
            field=models.ManyToManyField(blank=True, related_name='makaneyyat3', to='Map.LineStringDataElement'),
        ),
        migrations.AddField(
            model_name='makaneyya',
            name='multi_line_elements',
            field=models.ManyToManyField(blank=True, related_name='makaneyyat4', to='Map.MultiLineStringDataElement'),
        ),
        migrations.AddField(
            model_name='makaneyya',
            name='multi_polygon_elements',
            field=models.ManyToManyField(blank=True, related_name='makaneyyat6', to='Map.MultiPolygonDataElement'),
        ),
        migrations.AddField(
            model_name='makaneyya',
            name='point_elements',
            field=models.ManyToManyField(blank=True, related_name='makaneyyat2', to='Map.PointDataElement'),
        ),
        migrations.AddField(
            model_name='makaneyya',
            name='polygon_elements',
            field=models.ManyToManyField(blank=True, related_name='makaneyyat5', to='Map.PolygonDataElement'),
        ),
    ]
